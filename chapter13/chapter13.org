#+html_head: <link rel="stylesheet" type="text/css" href="/home/ticks/Public/org_style.css" />
#+title: 红黑树

* 红黑树 
** 红黑树的介绍
红黑树是一种特殊的二叉搜索树, 每个节点多出了一个颜色属性,并满足一下 5 条性质
1. 每个节点或者是黑色，或者是红色
2. 根节点是黑色的
3. 空的叶子节点是黑色的
4. 红色节点的孩子是黑色的
5. 每个节点到叶子的路径包含相同的黑色节点
** 红黑树的性质
  *引理*
#+BEGIN_QUOTE
n 个内部节点的红黑树最大高度为 $2log_2(n+1)$
#+END_QUOTE
*证明*
#+BEGIN_PROOF
先证以 x 为根的子树最少有 $2^{bh(x)}-1$ 个内部节点. 

1. 当 x 为空的叶子节点时, 以 x 为根的子树有 $2^0-1=0$ 个内部节点, 满足.
2. 当 x 有两个内部孩子节点时, 孩子节点的黑色高度(black-height)为 bh(x) (/* 当 x 为红色节点*/)  或者为 bh(x) -1 (/* 当 x 为黑色节点  */)
3. 所以 x 的节点数目 $n\geqslant 2^{bh(x)-1}-1+2^{bh(x)-1}-1+1=2^{bh(x)}-1$
4. 又 $bh(x)\geqslant h/2$, 所以 $n\geqslant 2^{h/2}-1$
5. 所以 $h\leqslant 2log_2(n+1)$
#+END_PROOF

** 旋转

左旋
1. x 右孩子 y 的左孩子成为 x 的右孩子
2. x 成为 y 的左孩子
3. y 取代 x 的位置

右旋
1. x 左孩子 y 的右孩子成为 x 的左孩子
2. x 成为 y 的右孩子
3. y 取代 x 的位置


